plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1'
	id 'com.google.cloud.tools.jib' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'hey.io'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(22)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url "https://jitpack.io" }
}

jib{
	from{
		image = 'openjdk:22'
	}
	to{
		image = 'hey'
		tags = ['0.0.1']
	}
	container{
		mainClass = 'hey.io.hey.HeyApplication'
		creationTime = 'USE_CURRENT_TIMESTAMP'
		format = 'OCI'
		volumes = ['/var/tmp']
		entrypoint = ['java', '-cp', '/app/resources:/app/classes:/app/libs/*',
		 			  'hey.io.hey.HeyApplication']
	}
}

dependencies {
	// Spring
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
	implementation 'org.bouncycastle:bcpkix-jdk15on:1.70'
	implementation 'org.bouncycastle:bcprov-jdk15on:1.70'
	implementation "org.mockito:mockito-core:5.10.0"
	implementation 'se.michaelthelin.spotify:spotify-web-api-java:8.0.0'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	runtimeOnly 'com.h2database:h2'

	// PostgreSQL
	runtimeOnly 'org.postgresql:postgresql'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// QueryDsl
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// Mapstruct
	implementation "org.mapstruct:mapstruct:1.5.3.Final"
	annotationProcessor "org.mapstruct:mapstruct-processor:1.5.3.Final"

	// JAXB dependencies
	implementation 'javax.xml.bind:jaxb-api:2.3.1'
	implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.1'

	// Feign
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:4.1.2'
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.11.1'
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-cbor:2.13.0'

	// Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-cache'

	// Firebase
	implementation 'com.google.firebase:firebase-admin:9.3.0'
	implementation 'com.fasterxml.jackson.core:jackson-core:2.17.1'
	implementation 'com.fasterxml.jackson.core:jackson-databind'

}

ext {
	set('springCloudVersion', "2022.0.3")
}

dependencyManagement {

	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}

}

tasks.named('test') {
	useJUnitPlatform()
}

def querydslSrcDir = 'src/main/generated'
clean {
	delete file(querydslSrcDir)
}
tasks.withType(JavaCompile) {
	options.generatedSourceOutputDirectory = file(querydslSrcDir)
}
